import { Request, Response } from "express";
import path from "path";
import pool from "../../config/dataBase";

// –†–∞—Å—à–∏—Ä—è–µ–º —Ç–∏–ø Request, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ user
interface AuthRequest extends Request {
  user?: {
    id: number;
    user_name: string;
  };
}

// üì• –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä: —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∫–æ–Ω–∫—É –∏ –ø—É—Ç—å –≤ –ë–î
export const uploadIcon = async (
  req: AuthRequest,
  res: Response
): Promise<void> => {
  try {
    const userId = req.user?.id;

    if (!userId) {
      res.status(401).json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" });
      return;
    }

    const file = req.file;

    if (!file) {
      res.status(400).json({ error: "–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω" });
      return;
    }

    const iconPath = `/icons/${file.filename}`;

    await pool.query("UPDATE users SET icon_url = $1 WHERE id = $2", [
      iconPath,
      userId,
    ]);

    res.status(200).json({ success: true, iconPath });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∫–æ–Ω–∫–∏:", error);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–∫–∏" });
  }
};
